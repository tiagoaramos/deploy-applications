#!/bin/bash

# Script para aplicar configura√ß√µes de armazenamento persistente
# Autor: Tiago Ramos
# Data: $(date)

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log "üöÄ Aplicando configura√ß√µes de armazenamento persistente..."

# Verificar se kubectl est√° dispon√≠vel
if ! command -v kubectl &> /dev/null; then
    error "kubectl n√£o est√° instalado ou n√£o est√° no PATH"
    exit 1
fi

# Verificar se o cluster est√° acess√≠vel
if ! kubectl cluster-info &> /dev/null; then
    error "N√£o √© poss√≠vel acessar o cluster Kubernetes"
    exit 1
fi

log "Cluster Kubernetes acess√≠vel ‚úÖ"

# Criar namespaces se n√£o existirem
log "Criando namespaces necess√°rios..."
kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
kubectl create namespace drone-space --dry-run=client -o yaml | kubectl apply -f -
kubectl create namespace harbor --dry-run=client -o yaml | kubectl apply -f -
kubectl create namespace site-space --dry-run=client -o yaml | kubectl apply -f -

# Aplicar StorageClass
log "Aplicando StorageClass..."
kubectl apply -f persistent-volumes.yml

# Aguardar um momento para os recursos serem criados
sleep 2

# Aplicar PersistentVolumes
log "Aplicando PersistentVolumes..."
kubectl apply -f persistent-volumes.yml

# Aplicar PersistentVolumeClaims espec√≠ficos de cada m√≥dulo
log "Aplicando PersistentVolumeClaims espec√≠ficos..."

# ArgoCD PVCs
log "Aplicando PVCs do ArgoCD..."
kubectl apply -f devops/argocd/argocd-pvc.yml

# Drone PVCs
log "Aplicando PVCs do Drone..."
kubectl apply -f devops/drone/drone-pvc.yml

# Harbor PVCs
log "Aplicando PVCs do Harbor..."
kubectl apply -f devops/harbor/harbor-pvc.yml

# Verificar status dos recursos
log "Verificando status dos PersistentVolumes..."
kubectl get pv

log "Verificando status dos PersistentVolumeClaims..."
kubectl get pvc --all-namespaces

log "Verificando StorageClass..."
kubectl get storageclass

echo ""
log "‚úÖ Configura√ß√µes de armazenamento persistente aplicadas com sucesso!"
log ""
log "üìã Pr√≥ximos passos:"
log "1. Verifique se os PersistentVolumes est√£o em status 'Available'"
log "2. Verifique se os PersistentVolumeClaims est√£o em status 'Bound'"
log "3. Atualize os manifests dos servi√ßos para usar os PVCs criados"
log ""
log "üí° Para verificar o status detalhado:"
log "   kubectl get pv,pvc --all-namespaces"
log "   kubectl describe pv [nome-do-pv]"
log "   kubectl describe pvc [nome-do-pvc] -n [namespace]"